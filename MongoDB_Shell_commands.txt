// To enter a MongoDB SHELL, you can in new Terminal windows run it:
mongo

//To get a HELP of commands in the MongoDB shell:
help

// To GET A LIST of databases
show dbs

// To CREATE or USE a DB 'shopDB' for instance
use shopDB
// The DB is not in list, unless it has a data inside

// CRUD Documentation https://www.mongodb.com/docs/manual/crud/
// MongoDB provides the following methods to insert documents into a collection:
db.collection.insertOne() New in version 3.2
db.collection.insertMany() New in version 3.2

// To CREATE a collection: (if the collection is not exist, it will be created with "db.products" automatically)
db.products.insertOne({_id: 1, name: "Pencil", price: 2.40})

// To create a another document inside a collection:
db.products.insertOne({_id: 2, name: "Pen", price: 1.20})

// To SHOW Collections:
show collections

// FIND: https://www.mongodb.com/docs/manual/reference/method/db.collection.find/#mongodb-method-db.collection.find

// To find all documents in collection
db.products.find()

// To find a specific document
db.products.find({name: "Pen"})

// To FIND all documents with a price greater than 1 for instance (query criteria)
db.products.find({price: {$gt: 1}})
>>> result:
{ "_id" : 1, "name" : "Pencil", "price" : 2.4 }
{ "_id" : 2, "name" : "Pen", "price" : 1.2 }


// The 0 or 1 represents True or False, so it show the True fields only
db.products.find({_id: 1}, {name: 1})
>>> result:
{ "_id" : 1, "name" : "Pencil" }

db.products.find({_id: 1}, {name: 0})
>>> result:
{ "_id" : 1, "price" : 2.4 }

// To UPDATE a data in document - to add a field and value
 db.products.updateOne({_id: 1}, {$set: {stock: 32}})
 >>> result:
{ "_id" : 1, "name" : "Pencil", "price" : 2.4, "stock" : 32 }
