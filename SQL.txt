// This is an intro to SQL Databases
// W3 SQL Documentation : https://www.w3schools.com/sql/default.asp

// You can try to create your first customers db in https://sqliteonline.com/

CREATE TABLE customers (
   id int,
   first_name varchar(255),
   last_name varchar(255),
   address varchar(255)
  );

CREATE TABLE products (
   id INT NOT NULL,
   name STRING,
   price MONEY,
   PRIMARY KEY (ID)
  );
  
// Now you can insert data to your table
// One record at a time:
INSERT INTO products
VALUES(1, "Phone", 39.99)

// Multiple records at once:
INSERT INTO products VALUES (2, "Phone", 39.99);
INSERT INTO products VALUES (3, "Car", 2359.99);

// or
INSERT INTO products
VALUES (2, "Phone", 39.99);
INSERT INTO products VALUES
(3, "Car", 2359.99);


// Inserting a specified fields only, that we want to fill out. (Price is missing, will be null)
INSERT INTO products (id,name)
VALUES (4,"House")

// UPDATE the specific records, now the record with id 4
// !! Be careful when updating records. If you omit the WHERE clause, ALL records will be updated!
UPDATE products
SET price = 299100
WHERE id = 4;

// UPDATE - updating ALL stock fields in db products at once!
UPDATE products
SET stock = 1;

// UPDATE a db record with specific ID for instance. and Updating name , price
// !! Be careful when updating records. If you omit the WHERE clause, ALL records will be updated!

UPDATE products
SET name = "Bike", price = 299
WHERE id = 4;

// ALTER TABLE - Add a column to a db structure
ALTER TABLE products
add stock INT;

// SELECT a particular data from the table
SELECT name, price FROM products;

// SELECT a particular data and row from the table with ID 4
SELECT name, price FROM products where id = 4;

// DELETE - To delete a specific record in your db
// !! Be careful when deleting records. If you omit the WHERE clause, ALL records will be DELETED!
DELETE FROM products
where id = 4;

// How to establish RELATIONSHIPS between different db tables ( reference https://www.w3schools.com/sql/sql_foreignkey.asp )
// SQL FOREIGN KEY Constraint
// The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.
// A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.
// The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table.

CREATE TABLE orders (
  id INT NOT NULL,
  order_number INT,
  customer_id INT,
  product_id INT,
  PRIMARY KEY (id),
  FOREIGN key (customer_id) REFERENCES customers(id),
  FOREIGN KEY (product_id) REFERENCES products(id)
  );
  
// How to establish RELATIONSHIPS between two exesting tables
// SQL FOREIGN KEY on ALTER TABLE
// To create a FOREIGN KEY constraint on the "PersonID" column when the "Orders" table is already created, use the following SQL:
ALTER TABLE Orders
ADD FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);

// INNER JOIN - To create a new database that selects records that have matching values in both tables. 
SELECT orders.order_number, customers.first_name, customers.last_name, customers.address 
FROM orders
INNER JOIN customers ON orders.customer_id =  customers.id
// Result: Order Number | Customer First Name | Customer Last Name | Customer Address

SELECT orders.order_number, products.name, products.price, products.stock
from orders
INNER JOIN products on orders.product_id = products.id
// Result: Order Number | Product Name | Product Price | Product Stock
